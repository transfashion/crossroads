<?
/*
Generated by TransBrowser Generator
*** Genearated by TransBrowser UI Application Generator --rn    created by   dwi.atnorn    created date 06/05/2011 15:25
asset tester
Filename: uimstasset-gridlistload.php
*/



if (!defined('__SERVICE__')) {
	die("access denied");
}

$username 	= $_SESSION["username"];
$limit 		= $_POST['limit'];
$start 		= $_POST['start'];
$criteria	= $_POST['criteria'];

$SQL_CRITERIA = "";
$objCriteria = json_decode(stripslashes($criteria));
if (is_array($objCriteria)) {
	$criteria = array();
	while (list($name, $value) = each($objCriteria)) {
		$criteria[$value->name] = $value;
		//seharusnya amankan criteria di sini, cegat di $criteria[$value->name]->value
	}


	/* Default Criteria */
	/*
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_channel_id', 'channel_id', " %s = '%s' ");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_region_id', 'region_id', " %s = '%s' ");
	*/

	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_asset_id', 'asset_id', "refParser");	
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_asset_name', 'asset_name', "{db_field} LIKE '%{criteria_value}%'");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_asset_type', 'asset_type', "{db_field} LIKE '%{criteria_value}%'");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_asset_status', 'asset_status', "refParser");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_asset_merk', 'asset_merk', "{db_field} LIKE '%{criteria_value}%'");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_region_id', 'region_id', " %s = '%s' ");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_strukturunit_id', 'strukturunit_id', " %s = '%s' ");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_branch_id', 'branch_id', " %s = '%s' ");	
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_class_id', 'assetclass_id', "{db_field} LIKE '%{criteria_value}%'");
}

 

if ($SQL_CRITERIA) {
	$sql = "SELECT * FROM master_asset WHERE $SQL_CRITERIA ORDER BY asset_id DESC";
} else {
	$sql = "SELECT * FROM master_asset ORDER BY asset_id DESC";
}



$rs = $conn->Execute($sql);
$totalCount = $rs->recordCount();
$rs = $conn->SelectLimit($sql, $limit, $start);
$data = array();
while (!$rs->EOF) {

	unset($obj);
	$obj->asset_id = trim($rs->fields['asset_id']);
	$obj->asset_bookdate = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['asset_bookdate']));
	$obj->asset_name = trim($rs->fields['asset_name']);
	$obj->asset_descr = trim($rs->fields['asset_descr']);
	$obj->asset_notes = trim($rs->fields['asset_notes']);
	$obj->asset_merk = trim($rs->fields['asset_merk']);
	$obj->asset_type = trim($rs->fields['asset_type']);
	$obj->asset_sn = trim($rs->fields['asset_sn']);
	$obj->asset_location = trim($rs->fields['asset_location']);
	$obj->asset_pic = trim($rs->fields['asset_pic']);
	$obj->asset_isparent = trim($rs->fields['asset_isparent']);
	$obj->asset_owner_id = trim($rs->fields['asset_owner_id']);
	$obj->asset_ownership = trim($rs->fields['asset_ownership']);
	$obj->asset_movingtype = trim($rs->fields['asset_movingtype']);
	$obj->asset_status = trim($rs->fields['asset_status']);
	$obj->asset_iswritenoff = trim($rs->fields['asset_iswritenoff']);
	$obj->asset_createby = trim($rs->fields['asset_createby']);
	$obj->asset_createdate = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['asset_createdate']));
	$obj->asset_modifyby = trim($rs->fields['asset_modifyby']);
	$obj->asset_modifydate = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['asset_modifydate']));
	$obj->asset_writenoffby = trim($rs->fields['asset_writenoffby']);
	$obj->asset_writenoffdate = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['asset_writenoffdate']));
	$obj->asset_writenoffref = trim($rs->fields['asset_writenoffref']);
	$obj->assetclass_id = trim($rs->fields['assetclass_id']);
	$obj->assetorder_id = trim($rs->fields['assetorder_id']);
	$obj->assetorder_line = (float) trim($rs->fields['assetorder_line']);
	$obj->assetrv_id = trim($rs->fields['assetrv_id']);
	$obj->assetrv_line = (float) trim($rs->fields['assetrv_line']);
	$obj->zone_id = trim($rs->fields['zone_id']);
	
	
	$strukturunit_id = trim($rs->fields['strukturunit_id']);
	$SQL ="select strukturunit_name from master_strukturunit WHERE strukturunit_id = '$strukturunit_id'";
	$RSSTRUCTUR = $conn->execute($SQL);
	$obj->strukturunit_id = trim($RSSTRUCTUR->fields['strukturunit_name']);
		
	$branch_id = trim($rs->fields['branch_id']);
	$SQL ="select branch_name from master_branch WHERE branch_id ='$branch_id'";
	$RSBRANCH = $conn->execute($SQL);
	$obj->branch_id = trim($RSBRANCH->fields['branch_name']);
	
	$region_id = trim($rs->fields['region_id']);
	$SQL ="select region_name from master_region WHERE region_id = '$region_id'";
	$RSREGION = $conn->execute($SQL);
	$obj->region_id = trim($RSREGION->fields['region_name']);
	
	$assetclass_id = trim($rs->fields['assetclass_id']);
	$SQL ="select assetclass_name from master_assetclass WHERE assetclass_id = '$assetclass_id'";
	$RSCLASS = $conn->execute($SQL);
	$obj->assetclass_id = trim($RSCLASS->fields['assetclass_name']);

 
	//$obj->assetclass_name = trim($RSCLASS->fields['assetclass_name']);

	$obj->rowid = trim($rs->fields['rowid']);

	$data[] = $obj;
	$rs->MoveNext();

}



$objResult = new WebResultObject("objResult");
$objResult->totalCount = $totalCount;
$objResult->success = true;
$objResult->data = $data;
unset($objResult->errors); 
		
print(stripslashes(json_encode($objResult)));

?>