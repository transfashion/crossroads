<?php
/*
Generated by TransBrowser Generator
Created by dhewe, 21/03/2011 15:55
Program untuk registrasi item
Filename: uitrnheinvregister-save.php
*/

	if (!defined('__SERVICE__')) {
		die("access denied");
	}


	$__USERNAME	= $_SESSION["username"];
	$__ID		= $_POST["__ID"];
	$__JSONDATA	= $_POST['JSONDATA'];
	$__POSTDATA = json_decode(stripslashes($__JSONDATA));
	$__POSTDATA = $__POSTDATA[0];
	$__RESULT = array("");	
	$__RESULT[0]->__ID = $__ID;
	

	if (empty($_POST) && isset($_SERVER['REQUEST_METHOD']) && strtolower($_SERVER['REQUEST_METHOD'])=='post') {
		$poidsMax = ini_get('post_max_size');
		$dbErrors = new WebResultErrorObject("0x00000001", "Data Overload, your data is too big, maximum allowed size here is $poidsMax");
		$objResult = new WebResultObject("objResult");
		$objResult->totalCount = 1;
		$objResult->success = false;
		$objResult->data = $__RESULT;
		$objResult->errors = $dbErrors;
		die(stripslashes(json_encode($objResult)));		
	}
	 

	$sql = "select * from transaksi_heinvregister where heinvregister_id='$__ID'";
	$rs  = $conn->Execute($sql);
	unset($objh);
	$objh->region_id = trim($rs->fields['region_id']);
	$objh->branch_id = trim($rs->fields['branch_id']);	
	$objh->season_id = trim($rs->fields['season_id']);
	$objh->heinvregister_issizing = trim($rs->fields['heinvregister_issizing']);



	//print "--->".$objh->heinvregister_issizing."<--";
	//die();
		 
	
	require_once dirname(__FILE__)."/uitrnheinvregister-generate_heinv.php"; 

	try {
		$conn->BeginTrans();
 
 		$arrDetilData = $__POSTDATA->DetilItem;
		if (is_array($arrDetilData)) {
			for ($i=0; $i<count($arrDetilData); $i++) {
				unset($obj);
				
				$currentline = $arrDetilData[$i]->heinvregisteritem_line;
				
				$obj->heinvregister_id 		= (string) $__ID;
				$obj->heinvregisteritem_line= (int) SQLUTIL::Normal($arrDetilData[$i]->heinvregisteritem_line);

				$obj->heinv_art 		= (string) SQLUTIL::Normal($arrDetilData[$i]->heinv_art);
				$obj->heinv_mat 		= (string) SQLUTIL::Normal($arrDetilData[$i]->heinv_mat);
				$obj->heinv_col 		= (string) SQLUTIL::Normal($arrDetilData[$i]->heinv_col);
				$obj->heinv_size 		= (string) SQLUTIL::Normal($arrDetilData[$i]->heinv_size); 
				$obj->heinv_barcode 	= (string) SQLUTIL::Normal($arrDetilData[$i]->heinv_barcode); 
				$obj->heinv_name 		= (string) $arrDetilData[$i]->heinv_name;
				$obj->heinv_descr 		= (string) $arrDetilData[$i]->heinv_descr;
				$obj->heinv_gtype 		= $arrDetilData[$i]->heinv_gtype;
				$obj->heinv_produk 		= $arrDetilData[$i]->heinv_produk;
				$obj->heinv_bahan 		= (string) substr(SQLUTIL::Normal($arrDetilData[$i]->heinv_bahan),0,69);
				$obj->heinv_pemeliharaan= (string) substr(SQLUTIL::Normal($arrDetilData[$i]->heinv_pemeliharaan),0,99);
				$obj->heinv_logo 		= $arrDetilData[$i]->heinv_logo;
				$obj->heinv_dibuatdi 	= $arrDetilData[$i]->heinv_dibuatdi;
				$obj->heinv_other1 		= $arrDetilData[$i]->heinv_other1;
				$obj->heinv_other2 		= $arrDetilData[$i]->heinv_other2;
				$obj->heinv_other3 		= $arrDetilData[$i]->heinv_other3;
				$obj->heinv_other4 		= $arrDetilData[$i]->heinv_other4;
				$obj->heinv_other5 		= $arrDetilData[$i]->heinv_other5;
				$obj->heinv_colordescr 	= $arrDetilData[$i]->heinv_colordescr;
				$obj->heinv_gender 		= $arrDetilData[$i]->heinv_gender;
				$obj->heinv_price 		= $arrDetilData[$i]->heinv_price;
				$obj->heinvctg_id 		= $arrDetilData[$i]->heinvctg_id;
				$obj->heinvgro_id 		= $arrDetilData[$i]->heinvgro_id;
				$obj->heinvctg_sizetag  = $arrDetilData[$i]->heinvctg_sizetag;

				$obj->heinv_hscode_ship = $arrDetilData[$i]->heinv_hscode_ship;
				$obj->heinv_hscode_ina  = $arrDetilData[$i]->heinv_hscode_ina;
				$obj->heinv_plbname     = $arrDetilData[$i]->heinv_plbname;

				$obj->heinv_isweb 		= $arrDetilData[$i]->heinv_isweb;
				$obj->heinv_weight 		= $arrDetilData[$i]->heinv_weight;
				$obj->heinv_length 		= $arrDetilData[$i]->heinv_length;
				$obj->heinv_width 		= $arrDetilData[$i]->heinv_width;
				$obj->heinv_height 		= $arrDetilData[$i]->heinv_height;
				$obj->heinv_webdescr 	= $arrDetilData[$i]->heinv_webdescr;


				$OLD_DATA       = SQLUTIL::GetRsHeinvFromTableByKey($obj->heinv_art, $obj->heinv_mat, $obj->heinv_col, $objh->season_id, $objh->region_id, $conn);
				$obj->heinv_id  = (string) (trim($rs->fields['heinv_id']) ? trim($rs->fields['heinv_id']) : $OLD_DATA->fields['heinv_id']);


				if ($obj->heinv_id) {
					/* sudah ada, apabila seasonnya beda update */
					HeinvUpdate($obj, $objh->season_id, $objh->region_id, $__USERNAME, $OLD_DATA, $conn);
					
					$conn->Execute("
						UPDATE transaksi_heinvregisteritem SET 
						  heinv_id='".$obj->heinv_id."'
						, heinv_hscode_ina='".$obj->heinv_hscode_ina."' 
						, heinvctg_sizetag='".$obj->heinvctg_sizetag."' 
						, heinvgro_id = '".$obj->heinvgro_id."'
						WHERE heinvregister_id='".$obj->heinvregister_id."' AND heinvregisteritem_line='".$obj->heinvregisteritem_line."'");					

					
				} else {
					/* belum ada, buat baru */
					$obj->heinv_id = HeinvInsert($obj, $objh->season_id, $objh->region_id, $__USERNAME, $conn);
					
					/* update transaksi_heinvregisteritem */
					$conn->Execute("
						UPDATE transaksi_heinvregisteritem SET 
						  heinv_id='".$obj->heinv_id."'
						, heinv_hscode_ina='".$obj->heinv_hscode_ina."' 
						, heinvctg_sizetag='".$obj->heinvctg_sizetag."' 
						, heinvgro_id = '".$obj->heinvgro_id."'
						WHERE heinvregister_id='".$obj->heinvregister_id."' AND heinvregisteritem_line='".$obj->heinvregisteritem_line."'");					
					
				
				}

				if ($objh->heinvregister_issizing) {
					$heinvitem_colnum = HeinvUpdateBarcode($obj->heinv_id, $obj->heinv_barcode, $obj->heinv_size, $conn);
					if ($heinvitem_colnum) {
						//update transaksi_heinvregisteritem pada colom colnumbernya
						unset($objupd);
						$objupd->heinv_id = $obj->heinv_id;
						$objupd->heinvitem_colnum = $heinvitem_colnum;
						$SQL = SQLUTIL::SQL_UpdateFromObject("transaksi_heinvregisteritem", $objupd, "heinvregister_id='$obj->heinvregister_id' AND heinvregisteritem_line='$obj->heinvregisteritem_line' ");
						$conn->Execute($SQL);
					}
				}

			}		
		} 		
 		
		
		$success = true;
		$conn->CommitTrans();
	} catch (Exception $e) {
	       
		$conn->RollbackTrans();
		$msg = $e->getMessage();
		$success = false;
		$dbErrors = new WebResultErrorObject("0x00000001", str_replace('"','',$msg));
	}


	$objResult = new WebResultObject("objResult");
	$objResult->totalCount = 1;
	$objResult->success = $success;
	$objResult->data =  $__RESULT;
	$objResult->errors = $dbErrors;
	if (!$dbErrors) unset($objResult->errors);
	
	print(stripslashes(json_encode($objResult)));
	
?>