<?
/*
Generated by TransBrowser Generator
*** Genearated by TransBrowser UI Application Generator --
    created by   fakhri.reza
    created date 21/05/2012 09:10
Master Season
Filename: uimstseason-gridlistload.php
*/



if (!defined('__SERVICE__')) {
	die("access denied");
}

$username 	= $_SESSION["username"];
$limit 		= $_POST['limit'];
$start 		= $_POST['start'];
$criteria	= $_POST['criteria'];

$SQL_CRITERIA = "";
$objCriteria = json_decode(stripslashes($criteria));
if (is_array($objCriteria)) {
	$criteria = array();
	while (list($name, $value) = each($objCriteria)) {
		$criteria[$value->name] = $value;
		//seharusnya amankan criteria di sini, cegat di $criteria[$value->name]->value
	}


	/* Default Criteria */
	/*
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_channel_id', 'channel_id', " %s = '%s' ");
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_region_id', 'region_id', " %s = '%s' ");
	*/

	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_season_id', 'season_id', "refParser");	
	SQLUTIL::BuildCriteria(&$SQL_CRITERIA, $criteria, 'obj_search_chk_season_name', 'season_name', "{db_field} LIKE '%{criteria_value}%'");
	
}


if ($SQL_CRITERIA) {
	$sql = "SELECT * FROM master_season WHERE $SQL_CRITERIA ORDER BY season_id DESC";
} else {
	$sql = "SELECT * FROM master_season ORDER BY season_id DESC";
}



$rs = $conn->Execute($sql);
$totalCount = $rs->recordCount();
$rs = $conn->SelectLimit($sql, $limit, $start);
$data = array();
while (!$rs->EOF) {

	unset($obj);
	$obj->season_id = trim($rs->fields['season_id']);
	$obj->season_name = trim($rs->fields['season_name']);
	$obj->season_namealias = trim($rs->fields['season_namealias']);
	$obj->season_datestart = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['season_datestart']));
	$obj->season_dateend = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['season_dateend']));
	$obj->season_isvisible_datestart = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['season_isvisible_datestart']));
	$obj->season_isvisible_dateend = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['season_isvisible_dateend']));
	$obj->season_isclosed = trim($rs->fields['season_isclosed']);
	$obj->season_createby = trim($rs->fields['season_createby']);
	$obj->season_createdate = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['season_createdate']));
	$obj->season_modifyby = trim($rs->fields['season_modifyby']);
	$obj->season_modifydate = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['season_modifydate']));
	$obj->season_closeby = trim($rs->fields['season_closeby']);
	$obj->season_closedate = SQLUTIL::SQLDateParseToStringdatesmall(trim($rs->fields['season_closedate']));
	$obj->rowid = trim($rs->fields['rowid']);

	$data[] = $obj;
	$rs->MoveNext();
}



$objResult = new WebResultObject("objResult");
$objResult->totalCount = $totalCount;
$objResult->success = true;
$objResult->data = $data;
unset($objResult->errors); 
		
print(stripslashes(json_encode($objResult)));

?>